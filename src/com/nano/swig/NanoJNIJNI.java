/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.nano.swig;

public class NanoJNIJNI {
  public final static native long getuid();
  public final static native void WordRef_english_set(long jarg1, WordRef jarg1_, String jarg2);
  public final static native String WordRef_english_get(long jarg1, WordRef jarg1_);
  public final static native void WordRef_word_class_set(long jarg1, WordRef jarg1_, String jarg2);
  public final static native String WordRef_word_class_get(long jarg1, WordRef jarg1_);
  public final static native void WordRef_chinese_set(long jarg1, WordRef jarg1_, String jarg2);
  public final static native String WordRef_chinese_get(long jarg1, WordRef jarg1_);
  public final static native void WordRef_example_set(long jarg1, WordRef jarg1_, String jarg2);
  public final static native String WordRef_example_get(long jarg1, WordRef jarg1_);
  public final static native void WordRef_english_inv_set(long jarg1, WordRef jarg1_, String jarg2);
  public final static native String WordRef_english_inv_get(long jarg1, WordRef jarg1_);
  public final static native void WordRef_data_offset_set(long jarg1, WordRef jarg1_, long jarg2);
  public final static native long WordRef_data_offset_get(long jarg1, WordRef jarg1_);
  public final static native void WordRef_data_size_set(long jarg1, WordRef jarg1_, long jarg2);
  public final static native long WordRef_data_size_get(long jarg1, WordRef jarg1_);
  public final static native long new_WordRef();
  public final static native void delete_WordRef(long jarg1);
  public final static native void CTest_constructor_set(long jarg1, long jarg2);
  public final static native long CTest_constructor_get(long jarg1);
  public final static native void CTest_data_set(long jarg1, double jarg2);
  public final static native double CTest_data_get(long jarg1);
  public final static native void CTest_getSum_set(long jarg1, long jarg2);
  public final static native long CTest_getSum_get(long jarg1);
  public final static native void CTest_getTest_set(long jarg1, long jarg2);
  public final static native long CTest_getTest_get(long jarg1);
  public final static native long new_CTest();
  public final static native void delete_CTest(long jarg1);
  public final static native double CTest_getTest(long jarg1, double jarg2, double jarg3);
  public final static native double CTest_getSum(long jarg1, double jarg2);
  public final static native void _CTest(long jarg1);
  public final static native String Start();
  public final static native int Prepare(byte[] jarg1, int jarg2);
  public final static native int Manipluate(byte[] jarg1, int jarg2, int jarg3);
  public final static native int IteratorStart();
  public final static native int IteratorFetch();
  public final static native int IteratorGet(int jarg1);
  public final static native int IteratorNext();
  public final static native int Iterator(String jarg1);
  public final static native int Search(String jarg1);
  public final static native String Result_Prepare();
  public final static native String Result();
  public final static native String Result_Trans(int jarg1);
  public final static native String Result_Examp(int jarg1);
  public final static native void MultiLinkElement_linkcount_set(long jarg1, MultiLinkElement jarg1_, int jarg2);
  public final static native int MultiLinkElement_linkcount_get(long jarg1, MultiLinkElement jarg1_);
  public final static native void MultiLinkElement_prev_set(long jarg1, MultiLinkElement jarg1_, long jarg2);
  public final static native long MultiLinkElement_prev_get(long jarg1, MultiLinkElement jarg1_);
  public final static native void MultiLinkElement_next_set(long jarg1, MultiLinkElement jarg1_, long jarg2);
  public final static native long MultiLinkElement_next_get(long jarg1, MultiLinkElement jarg1_);
  public final static native void MultiLinkElement__final_set(long jarg1, MultiLinkElement jarg1_, long jarg2);
  public final static native long MultiLinkElement__final_get(long jarg1, MultiLinkElement jarg1_);
  public final static native void MultiLinkElement_free_set(long jarg1, MultiLinkElement jarg1_, long jarg2);
  public final static native long MultiLinkElement_free_get(long jarg1, MultiLinkElement jarg1_);
  public final static native void MultiLinkElement_clear_set(long jarg1, MultiLinkElement jarg1_, long jarg2);
  public final static native long MultiLinkElement_clear_get(long jarg1, MultiLinkElement jarg1_);
  public final static native long new_MultiLinkElement();
  public final static native void delete_MultiLinkElement(long jarg1);
  public final static native void MultiLinkElement_clear(long jarg1, MultiLinkElement jarg1_);
  public final static native long MultiLinkElement_free(long jarg1, MultiLinkElement jarg1_);
  public final static native void _MultiLinkElement(long jarg1, MultiLinkElement jarg1_, int jarg2);
  public final static native void MultiLinkBase_linkcount_set(long jarg1, MultiLinkBase jarg1_, int jarg2);
  public final static native int MultiLinkBase_linkcount_get(long jarg1, MultiLinkBase jarg1_);
  public final static native void MultiLinkBase_linkindex_set(long jarg1, MultiLinkBase jarg1_, int jarg2);
  public final static native int MultiLinkBase_linkindex_get(long jarg1, MultiLinkBase jarg1_);
  public final static native void MultiLinkBase_link_set(long jarg1, MultiLinkBase jarg1_, long jarg2, MultiLinkElement jarg2_);
  public final static native long MultiLinkBase_link_get(long jarg1, MultiLinkBase jarg1_);
  public final static native void MultiLinkBase_insertLink_set(long jarg1, MultiLinkBase jarg1_, long jarg2);
  public final static native long MultiLinkBase_insertLink_get(long jarg1, MultiLinkBase jarg1_);
  public final static native void MultiLinkBase_removeLink_set(long jarg1, MultiLinkBase jarg1_, long jarg2);
  public final static native long MultiLinkBase_removeLink_get(long jarg1, MultiLinkBase jarg1_);
  public final static native void MultiLinkBase_get_set(long jarg1, MultiLinkBase jarg1_, long jarg2);
  public final static native long MultiLinkBase_get_get(long jarg1, MultiLinkBase jarg1_);
  public final static native void MultiLinkBase_prev_set(long jarg1, MultiLinkBase jarg1_, long jarg2);
  public final static native long MultiLinkBase_prev_get(long jarg1, MultiLinkBase jarg1_);
  public final static native void MultiLinkBase_next_set(long jarg1, MultiLinkBase jarg1_, long jarg2);
  public final static native long MultiLinkBase_next_get(long jarg1, MultiLinkBase jarg1_);
  public final static native long new_MultiLinkBase();
  public final static native void delete_MultiLinkBase(long jarg1);
  public final static native long MultiLinkBase_removeLink(long jarg1, MultiLinkBase jarg1_, long jarg2, MultiLinkElement jarg2_);
  public final static native long MultiLinkBase_get(long jarg1, MultiLinkBase jarg1_, int jarg2);
  public final static native void MultiLinkBase_insertLink(long jarg1, MultiLinkBase jarg1_, long jarg2, MultiLinkElement jarg2_, long jarg3, MultiLinkElement jarg3_, long jarg4, MultiLinkElement jarg4_);
  public final static native long MultiLinkBase_prev(long jarg1, MultiLinkBase jarg1_, long jarg2, MultiLinkElement jarg2_);
  public final static native long MultiLinkBase_next(long jarg1, MultiLinkBase jarg1_, long jarg2, MultiLinkElement jarg2_);
  public final static native void _MultiLinkBase(long jarg1, MultiLinkBase jarg1_, int jarg2);
  public final static native int MAP_SHIFT_get();
  public final static native int POOL_MAX_get();
  public final static native int MAP_MAX_get();
  public final static native int MAP_MASK_get();
  public final static native void ElementPool_pool_set(long jarg1, ElementPool jarg1_, long jarg2, MultiLinkElement jarg2_);
  public final static native long ElementPool_pool_get(long jarg1, ElementPool jarg1_);
  public final static native void ElementPool_map_set(long jarg1, ElementPool jarg1_, long jarg2);
  public final static native long ElementPool_map_get(long jarg1, ElementPool jarg1_);
  public final static native void ElementPool_size_set(long jarg1, ElementPool jarg1_, int jarg2);
  public final static native int ElementPool_size_get(long jarg1, ElementPool jarg1_);
  public final static native void ElementPool_msize_set(long jarg1, ElementPool jarg1_, int jarg2);
  public final static native int ElementPool_msize_get(long jarg1, ElementPool jarg1_);
  public final static native void ElementPool_count_set(long jarg1, ElementPool jarg1_, int jarg2);
  public final static native int ElementPool_count_get(long jarg1, ElementPool jarg1_);
  public final static native void ElementPool_at_set(long jarg1, ElementPool jarg1_, long jarg2);
  public final static native long ElementPool_at_get(long jarg1, ElementPool jarg1_);
  public final static native void ElementPool_get_set(long jarg1, ElementPool jarg1_, long jarg2);
  public final static native long ElementPool_get_get(long jarg1, ElementPool jarg1_);
  public final static native void ElementPool_back_set(long jarg1, ElementPool jarg1_, long jarg2);
  public final static native long ElementPool_back_get(long jarg1, ElementPool jarg1_);
  public final static native long new_ElementPool();
  public final static native void delete_ElementPool(long jarg1);
  public final static native long ElementPool_at(long jarg1, ElementPool jarg1_, int jarg2);
  public final static native long ElementPool_get(long jarg1, ElementPool jarg1_);
  public final static native void ElementPool_back(long jarg1, ElementPool jarg1_, long jarg2, MultiLinkElement jarg2_);
  public final static native void _ElementPool(long jarg1, ElementPool jarg1_, long jarg2, MultiLinkElement jarg2_, long jarg3, int jarg4);
}
